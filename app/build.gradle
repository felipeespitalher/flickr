apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: 'jacoco.gradle'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.tigerspike"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "API_BASE_URL", "\"https://api.flickr.com/\""
        buildConfigField "String", "API_KEY", "\"568208aa893c4dc05f1c79766e178498\""

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    dataBinding {
        enabled = true
    }

}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Android
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.1'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'

    // Arch Components
    def arch_components_version = '2.0.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$arch_components_version"
    kapt "androidx.lifecycle:lifecycle-compiler:$arch_components_version"
    testImplementation "androidx.arch.core:core-testing:$arch_components_version"

    implementation 'com.facebook.fresco:fresco:1.12.1'
    implementation 'com.google.android:flexbox:1.1.0'

    // Dependency Injection
    def dagger_version = "2.21"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    compileOnly 'javax.annotation:jsr250-api:1.0'

    // NetworkCall
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.0.2'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    implementation 'com.squareup.okio:okio:1.16.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'
    implementation "com.squareup.retrofit2:converter-moshi:2.5.0"

    // Json
    def moshi_verion = '1.8.0'
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_verion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_verion"

    // RX
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'

    // Request Permission
    def permissionsDispatcherVersion = '4.3.0'
    implementation "org.permissionsdispatcher:permissionsdispatcher:$permissionsDispatcherVersion"
    kapt "org.permissionsdispatcher:permissionsdispatcher-processor:$permissionsDispatcherVersion"

    // Log
    implementation 'com.jakewharton.timber:timber:4.7.1'

    testImplementation 'junit:junit:4.12'
    testImplementation "org.robolectric:robolectric:4.1"
    testImplementation("org.assertj:assertj-core:3.11.1")
    testImplementation "io.mockk:mockk:1.8.9"
    testImplementation "androidx.test:core:1.1.0"

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.9@aar') {
        transitive = true
    }
}